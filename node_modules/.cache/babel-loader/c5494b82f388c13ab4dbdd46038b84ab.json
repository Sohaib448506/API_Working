{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/Practice/bookStore/API Work/src/forms/EditProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport Button from \"../components/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport { CancelToken } from \"apisauce\";\nimport { AppContext } from \"../context/AppContext\"; //Defining our yup validation\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormSchema = Yup.object({\n  email: Yup.string().email(\"Must be a valid e-mail format\").required(),\n  password: Yup.string().required(),\n  confirm_password: Yup.string().required()\n});\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  confirm_password: \"\"\n};\n\nconst handleSubmit = values => {\n  console.log(values);\n};\n\nexport default function EditProfileForm() {\n  _s();\n\n  const {\n    setUser\n  } = useContext(AppContext);\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: FormSchema,\n    onSubmit: values => {\n      handleSubmit(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"email\",\n      name: \"email\",\n      fullWidth: true,\n      sx: {\n        mb: 2,\n        mt: 2\n      },\n      label: \"email\",\n      placeholder: \"email\",\n      value: formik.values.email,\n      onChange: formik.handleChange,\n      error: formik.touched.email && Boolean(formik.errors.email),\n      helperText: formik.touched.email && formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      label: \"password\",\n      placeholder: \"password\",\n      value: formik.values.password,\n      onChange: formik.handleChange,\n      error: formik.touched.password && Boolean(formik.errors.password),\n      helperText: formik.touched.password && formik.errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"confirm_password\",\n      name: \"confirm_password\",\n      type: \"confirm_password\",\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      label: \"confirm_password\",\n      placeholder: \"confirm_password\",\n      value: formik.values.confirm_password,\n      onChange: formik.handleChange,\n      error: formik.touched.confirm_password && Boolean(formik.errors.confirm_password),\n      helperText: formik.touched.confirm_password && formik.errors.confirm_password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      sx: {\n        width: \"100%\"\n      },\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfileForm, \"OrZly8E5kFyeQY5TQadGqicku9E=\", false, function () {\n  return [useFormik];\n});\n\n_c = EditProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileForm\");","map":{"version":3,"names":["React","useContext","Yup","useFormik","Button","TextField","CancelToken","AppContext","FormSchema","object","email","string","required","password","confirm_password","initialValues","handleSubmit","values","console","log","EditProfileForm","setUser","formik","validationSchema","onSubmit","mb","mt","handleChange","touched","Boolean","errors","width"],"sources":["/home/sohaib/Desktop/Practice/bookStore/API Work/src/forms/EditProfileForm.js"],"sourcesContent":["import { React, useContext } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport Button from \"../components/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport { CancelToken } from \"apisauce\";\nimport { AppContext } from \"../context/AppContext\";\n\n//Defining our yup validation\nconst FormSchema = Yup.object({\n  email: Yup.string().email(\"Must be a valid e-mail format\").required(),\n  password: Yup.string().required(),\n  confirm_password: Yup.string().required(),\n});\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  confirm_password: \"\",\n};\n\nconst handleSubmit = (values) => {\n  console.log(values);\n};\n\nexport default function EditProfileForm() {\n  const { setUser } = useContext(AppContext);\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: FormSchema,\n    onSubmit: (values) => {\n      handleSubmit(values);\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <TextField\n        id=\"email\"\n        name=\"email\"\n        fullWidth\n        sx={{ mb: 2, mt: 2 }}\n        label=\"email\"\n        placeholder=\"email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n\n      <TextField\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        fullWidth\n        sx={{ mb: 2 }}\n        label=\"password\"\n        placeholder=\"password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n      />\n      <TextField\n        id=\"confirm_password\"\n        name=\"confirm_password\"\n        type=\"confirm_password\"\n        fullWidth\n        sx={{ mb: 2 }}\n        label=\"confirm_password\"\n        placeholder=\"confirm_password\"\n        value={formik.values.confirm_password}\n        onChange={formik.handleChange}\n        error={\n          formik.touched.confirm_password &&\n          Boolean(formik.errors.confirm_password)\n        }\n        helperText={\n          formik.touched.confirm_password && formik.errors.confirm_password\n        }\n      />\n\n      <Button type=\"submit\" sx={{ width: \"100%\" }}>\n        Edit Profile\n      </Button>\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}