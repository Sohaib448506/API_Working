{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/Practice/bookStore/React_bookstore/src/forms/EditProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as Yup from \"yup\";\nimport { useFormik } from 'formik';\nimport Button from '../components/Button';\nimport TextField from '@mui/material/TextField';\nimport { CancelToken } from 'apisauce';\nimport { AppContext } from '../context/AppContext'; //Defining our yup validation\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormSchema = Yup.object({\n  email: Yup.string().email(\"Must be a valid e-mail format\").required(),\n  password: Yup.string().required(),\n  confirm_password: Yup.string().required()\n});\nconst initialValues = {\n  email: '',\n  password: '',\n  confirm_password: ''\n};\n\nconst handleSubmit = values => {\n  console.log(values);\n};\n\nexport default function EditProfileForm() {\n  _s();\n\n  const {\n    setUser\n  } = useContext(AppContext);\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: FormSchema,\n    onSubmit: values => {\n      handleSubmit(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"email\",\n      name: \"email\",\n      fullWidth: true,\n      sx: {\n        mb: 2,\n        mt: 2\n      },\n      label: \"email\",\n      placeholder: \"email\",\n      value: formik.values.email,\n      onChange: formik.handleChange,\n      error: formik.touched.email && Boolean(formik.errors.email),\n      helperText: formik.touched.email && formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      label: \"password\",\n      placeholder: \"password\",\n      value: formik.values.password,\n      onChange: formik.handleChange,\n      error: formik.touched.password && Boolean(formik.errors.password),\n      helperText: formik.touched.password && formik.errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"confirm_password\",\n      name: \"confirm_password\",\n      type: \"confirm_password\",\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      label: \"confirm_password\",\n      placeholder: \"confirm_password\",\n      value: formik.values.confirm_password,\n      onChange: formik.handleChange,\n      error: formik.touched.confirm_password && Boolean(formik.errors.confirm_password),\n      helperText: formik.touched.confirm_password && formik.errors.confirm_password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      sx: {\n        width: \"100%\"\n      },\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfileForm, \"7jk1snmFhQAQ5l20/riS4iHpCd8=\", false, function () {\n  return [useFormik];\n});\n\n_c = EditProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileForm\");","map":{"version":3,"names":["React","Yup","useFormik","Button","TextField","CancelToken","AppContext","FormSchema","object","email","string","required","password","confirm_password","initialValues","handleSubmit","values","console","log","EditProfileForm","setUser","useContext","formik","validationSchema","onSubmit","mb","mt","handleChange","touched","Boolean","errors","width"],"sources":["/home/sohaib/Desktop/Practice/bookStore/React_bookstore/src/forms/EditProfileForm.js"],"sourcesContent":["import React from 'react';\nimport * as Yup from \"yup\";\nimport { useFormik } from 'formik';\nimport Button from '../components/Button';\nimport TextField from '@mui/material/TextField';\nimport {CancelToken} from 'apisauce';\nimport { AppContext } from '../context/AppContext';\n\n//Defining our yup validation\nconst FormSchema=Yup.object(\n    {\n        email:Yup.string().email(\"Must be a valid e-mail format\").required(),\n        password:Yup.string().required(),\n        confirm_password:Yup.string().required()\n    }\n)\n\nconst initialValues={\n    email:'',\n    password:'', \n    confirm_password:''\n}\n\nconst handleSubmit=(values)=>{\n    console.log(values)\n}\n\n\nexport default function EditProfileForm(){\n    const {setUser} = useContext(AppContext);\n\n    const formik = useFormik({\n        initialValues:initialValues,\n        validationSchema:FormSchema,\n        onSubmit:(values)=>{handleSubmit(values)}\n    })\n\n    return(\n        <form onSubmit={formik.handleSubmit}>\n            <TextField\n                id=\"email\"\n                name=\"email\"\n                fullWidth\n                sx={{mb:2, mt:2}}\n                label=\"email\"\n                placeholder=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}            \n            />\n\n            <TextField\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                fullWidth\n                sx={{mb:2}}\n                label=\"password\"\n                placeholder=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                error={formik.touched.password && Boolean(formik.errors.password)}\n                helperText={formik.touched.password && formik.errors.password}            \n            />\n            <TextField\n                id=\"confirm_password\"\n                name=\"confirm_password\"\n                type=\"confirm_password\"\n                fullWidth\n                sx={{mb:2}}\n                label=\"confirm_password\"\n                placeholder=\"confirm_password\"\n                value={formik.values.confirm_password}\n                onChange={formik.handleChange}\n                error={formik.touched.confirm_password && Boolean(formik.errors.confirm_password)}\n                helperText={formik.touched.confirm_password && formik.errors.confirm_password}            \n            />\n\n            <Button type=\"submit\" sx={{width:\"100%\"}}>Edit Profile</Button>\n        </form>\n    )\n    }"],"mappings":"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"},"metadata":{},"sourceType":"module"}